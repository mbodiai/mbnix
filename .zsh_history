cat /home/seb/.nix-profile 
la  /home/seb/
code /etc/zsh/zprofile 
code /etc/zsh/zshrc 
ls  /usr/share/zsh/help/
ls  /usr/share/zsh/help/autoload 
cat /usr/share/zsh/help/autoload 
cat  ~/.nix-profile 
sudo cat  ~/.nix-profile 
getent
getent --usage
getent --help
getent group
ls -a
ls -a ..
bash setup/del-nix.sh 
bash setup/del-nix.sh
code /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
 mv /etc/bashrc.backup-before-nix /etc/bashrc
sudo  mv /etc/bashrc.backup-before-nix /etc/bashrc
sudo  mv /etc/bashrc.backup-before-nix /etc/bashrc && rm /etc/bashrc.backup-before-nix
sudo  mv /etc/bash.bashrc.backup-before-nix /etc/bashrc && rm /etc/bash.bashrc.backup-before-nix
sudo cat /etc/bash.bashrc.backup-before-nix
bash setup/install_nix.sh
nix help-stores
pwd
la
code shell/setup-mbnix.sh
env -i bash   . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'\

    . ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
autosuggest 1
zcomp init
source shell/setup.sh
mbnix --help
cd ~
sh mamba.sh
conda update -n base -c conda-forge conda
mamba activate
code ~/.zshrc
conda
source ~/.zshrc
mamba
code shell/.zshrc
d
alias
mbnix env
mbnix shell
nix --help
nix-channel --remove nixpkgs\
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\
nix-channel --update
nix doctor
nix-collect-garbage -d\
nix-store --delete /nix/var/nix/profiles/per-user/$(whoami)/channels\
rm -rf ~/.nix-defexpr/channels
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\
nix-channel --update
nix search nixpkgs rnix-lsp
nix run github:nix-community/rnix-lsp
nixfmt-rfc-style
nix-env -iA nixpkgs.nixfmt-rfc-style
nix-channel --list
nix-env -u '*'
env | grep IN_NIX_SHELL
nix-env -qaP | grep nixfmt
nix-store --delete /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
rm /home/seb/.local/state/nix/profiles/channels-5-link
sudo rm /nix/var/nix/profiles/per-user/root/channels-1-link
sudo rm /nix/var/nix/profiles/per-user/root/channels\
sudo rm /nix/var/nix/profiles/per-user/root/channels-1-link
sudo ls -l /nix/var/nix/profiles/per-user/root/
sudo nix-store --query --roots /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix
sudo -i\
nix --version
nix --version
nix-store --query --roots /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix-store --query --referrers /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix-env -p /nix/var/nix/profiles/per-user/root/profile --list-generations
sudo ls -ld /nix/var/nix/profiles/per-user/root
sudo chown -R root:root /nix/var/nix/profiles/per-user/root
sudo nix-env -p /nix/var/nix/profiles/per-user/root/profile --list-generations
sudo -i
nix-store --query --referrers /nix/store/5gb5srdqbbvcrrmqahh4qxalvgy1g475-env-manifest.nix
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\

nix-channel --update
which nix-instantiate
which rnix-lsp
nix-env -iA nixpkgs.rnix-lsp
nixpkgs-fmt
nix-env -iA nixpkgs.nixpkgs-fmt
nix-instantiate
env -i bash shell/setup-mbnix.sh
ls -lt
ls -lrt
ls -ltr
lr
cd mbodied_ros
docker compose up --build
sudo apt install docker
cd ..
uname -s
source .mbnix/r.sh
source .mbnix/.r.sh
uv self update
uv
uv --help
uv --no-project
uw
mb
r
source .mbnix/utils/tree.sh
t 2
source ~/pure.zsh
env -i bash
pipx
which $SHELL
clear
t 3
t 5
t --timestamps
t -t 4
t -t 4 .
t -t 1 .
t . -t
t . 1 -t
source .mbnix/utils/base.sh 
source .mbnix/utils/tree.sh 
mbnix env all
mbnix env 
mb env all all
source .mbnix/setup.sh 
mb env all
env | grep CXX
env | grep LD
env | grep py
mb env py
mb shell
echo ls -l ~/.sudo_as_admin_successful
cho $HOME
echo $HOME
mb env
mbnix
code .mbnix/utils/base.sh
source .mbnix/utils/base.sh
bat
gld
env 
source .mbnix/utils/env.sh
t -t
t -t 1
t 1 -t 
t 3 -t
t 3 -t pip
f
ff
echo $ZSH_VERSION
code $USER_SHELL
echo $SHELL
exec zsh
echo $0
code ~/.bashrc
code /usr/share/doc/bash/README.md.bash_completion.gz 
echo $SHELL $USER_SHELL
echo $SHELL $USER_SHELL $0
exec bash
ls
export MINIMAL=false
git status
git add .
git commit -m "init\
"
git push
echo $USER_SHELL
bash
env
env | grep MB
unset EXTAS
t
rs extras
doctor
als
alsources
rs
source .mbnix/.zshrc
exit
: 1732585557:0;als
: 1732585567:0;a
: 1732585570:0;rs extras
echo nix help > out.txt
code out.txt
echo $(nix help) > out.txt
source .zshrc 
nix help --no-color
nix help --help
export NIX_PAGER=cat
nix develop --recreate
export NIX_PAGER=bat
export NIX_PAGER=less
export NIX_PAGER='less -R'
export NIX_PAGER='less'
export NIX_DOC_LINK_STYLE=none
cat .bashrc
cat ../.bashrc
nix help --color
nix help | bat --no-color
nix help | less --no-color
nixd
tmux new
export NIX_DOC_LINK_STYLE=plain
sudo nixos-rebuild switch --upgrade
nix help | cat --no-color
env | grep -E 'NIX|LESS|PAGER|MANPAGER|GROFF'
env | grep -iE 'pager|less|termcap|bat'
unset PAGER\
unset NIX_PAGER
export NIX_HYPERLINKS=0 
mv nix.conf oldnix.conf
nix.conf
sudo logout
nix config check
sh doctor.sh
export PATH=$(echo $PATH | tr ':' '\n' | grep -v '/nix/store/rpl4s6srw7cgsvpa8w2ndrk1gc15i3ch-nix-2.24.10/bin' | paste -sd ':' -)
which -a nix
nix-collect-garbage -d
export PATH=$(echo $PATH | tr ':' '\n' | grep -v '/home/seb/.nix-profile/bin' | paste -sd ':' -)
nix-env -iA nixpkgs.direnv
echo $PATH | tr ':' '\n' | grep nix
ls /nix/store/*-nix-*/bin/nix
for user in /home/*; do\
    if [ -d "$user/.nix-profile/bin" ]; then\
        echo "Nix profile found for user: $(basename $user)"\
    fi\
done
cd corp/
mkdir conf
mkdir help
mv doctor.sh help
mkdir shell
mv git.py git.sh out.txt record.sh utils.sh shell/.
mv requirements.txt conf
mv conf/requirements.txt .
mkdir requirements
mv requirements.txt requirements/.
touch README.md
code README.md
code install-mbnix.sh
nstall-mbnix.sh
sh install-mbnix.sh
code setup/colors.sh
code .env.sh
env.sh env.sh
mv '.env.sh' env.sh
code env.sh
echo $USER
echo $SHELL_RC
source setup-nix.sh
export MB_WS=$PWD
cat nix.conf
   . /etc/profile.d/nix.sh
chmod +x setup-nix.sh
. setup-nix.sh
sh setup-nix.sh
ls | grep setup-nix.sh
$pwd
ls -l
. ./setup-nix.sh
echo $MB_WS
echo $BOLD_PINK
echo $PINK_BOLD
echo ""
echo "$BOLD_PINK  hi $RESET"
echo "$PINK_BOLD hi $RESET"
ps
$ps
export MB_WS=$PWD && source .zshrc
export MB_WS=$PWD && . .zshrc
export MB_WS=$PWD && . /shell/.zshrc
mbinx
. ./shell/.zshrc
source .zshrc
mbnix install
. shell/.zshrc
$_
echo $__
echo $_
echo $__structuredAttrs
export MB_WS=$PWD && . ./shell/.zshrc
cd shell
code setup-mbnix.sh
. setup-mbnix.sh
code .env
la shell
nix develop .
cd .
. ./setup-mbnix.sh
. ./shell/setup-mbnix.sh
export PS1=%{%}%n@%:$(__mb_prompt)%{%}%~%{%} %# 
echo `\
seb@~/mbnix % 
cellar
unset MB_COLOR_CODE
cd setup
echo $__mb_prompt
echo "${MB_COLOR}$MB_PROMPT${RESET}"
cd -
mkdir test
git touch init
touch init
git add init
reset
git commit -m latest
code .
code shell/colors.sh
exec shell/.zshrc
__mb_prompt
$__mb_prompt
echo $MB_PROMPT
cd test
echo $git_remote
echo $git_branch
env | grep git
git
git config 
git config -l
git 
git branch
git rev-parse --show-toplevel 
cd corpt
repo
export repo=$(git rev-parse --show-toplevel 2>/dev/null)
$repo
echo $repo
mpip search rpm
la -C
chmod +x install_miniconda_mamba.sh && ./mamba.sh
chmod +x mamba.sh && ./mamba.sh
python3 -m venv venv
pip install hatch
hatch env create --init henv
hatch env create --new henv
hatch env create henv
hatch init --new henv
hatch new --init henv
cat --help
code --help
code "--help"
code '--help'
code $'--help'
vim  '--help'
code "'--help'"
la --color
code ./--help
rm -rf --help
rm -rf ./--help
cat hello
t hello
ls hello
cd home
cd seb
cd corp
cat .env
rm -rf home
code pyproject.toml
mkdir -p src/henv
cd src/henv
touch __about__.py
hatch shell
source "/home/seb/.local/share/hatch/env/virtual/henv/bin/activate"
alias | grep -E 'nix|less|man'\
functions | grep -E 'nix|less|man'
echo $PROMPT
echo $PS1
mbnix reset
env | grep PATH
nix --help | cat
nix --help | less --no-color
nix --help | less -xclor
nix --help | less -xclolor
nix --help | less --xcolor
less --help
nix --help | less --use-color
nix --help | less -D
nix --help | less -D --xclolor
nix --help | less 
nix --help | cat -C
nix --help | cat --color
env | grep PS1
git init
git rm --cached test
git rm --cached -f test
rm -rf test
git commit -m "init"
gh repo create --private mbnix
gh repo create --private mbodiai/mbnix
git remote update
. ~/.zshrc
git config --get remote.origin.url
sudo certbot -d test.mbodi.ai --nginx
sudo certbot --cert-name test.mbodi.ai
git checkout -b main
which zsh
man fc
fc --help
which fc
fc
fc -ln
help fc
help
man zshbuiltins
script ~/session_log.txt
echo "${git_remote##*/}"
echo "$__mb_prompt"
echo "$(__mb_prompt)"
cat ~/session_log.txt
env | grep less
env | grep term
unset TERM
nix --help | cat 
unset CLICOLOR
mbnix --help 
env | grep COLOR
nix --help | less
nix --help | cat -
nix --help > ~/nix_help_output.txt 2>&1
code ~/nix_help_output.txt
plo
export TERM=xterm-256color
echo $TERM
nix-env -iA nix
echo | grep NIX
echo | grep NIX_
echo | grep L
nix --help 
echo $IN_NIX_SHELL
ps -o comm= $PPID
command -v nix-shell\
command -v nix\
command -v nix-store
locale
nix-collect-garbage\
nix-store --gc
nix-store --query --requisites /nix/store | grep nix
nix-store --query --requisites /nix
nix-store --query --requisites nix/store | grep nix
nix-store --query --requisites nix | grep nix
echo $LESS
env | grep NIX
code nix.conf
nix help --extra-experimental-features nix-command
echo $less
t -f
tree -f
code .dotnet
env | shell
env | grep SHELL
code .zshrc
code ~
nix help
cat ~/.zshrc
exec sh
bash shell/test.sh
ccat shell/.zshrc
export MB_COLOR=PINK_BOLD
unset MB_COLOR
source ctest.sh
source shell/test.sh
fish
env | grep LVL
source ~/mbnix/shell/.r.sh
source ~/mbnix/shell/test.sh
tgrep 
ts mbodied_ros
cd mbnix/mbodied_ros
uvp
which python3
pythn3 -V
python3 -V
conda activate
env | grep CONDA
code /etc/bash.bashrc
vim /etc/profile.d/nix.sh
sudo vim /etc/profile.d/nix.sh
sudo vim /etc/bash.bashrc
sudo rm -rf /etc/bashrc
rm -rf /etc/zshrc.backup-before-nix
sudo rm -rf /etc/zshrc.backup-before-nix
sudo rm -rf /etc/zshrc
nix uninstall
nix 
vim ~/.zshrc
source test2.sh
code mbnix/ctest.sh
source mbnix/ctest.sh
tree
ls .local
rm -rf termtosvg_output.svg
code docker/Dockerfile
git clone https://github.com/mbodiai/mbpy
git branch -a
source ../shell/.r.sh
source ../shell/.zshrc
s
python -m venv venv
source ~/test2.sh
cd mbpy
pip install -e .
python -m mbpy.cli
pip install rich
echo $PATH
echo $VIRTUALENV
echo $VIRTUAL_ENV
source ../async.zsh&& source ../pure.zsh
git remote add origin https://github.com/mbodiai/mbnix
prompt_pure_async_git_arrows
%b
echo "%b"
echo "$%b"
echo "$'%b'"
export LESS=-R
export less=$LESS
sudo vim /etc/nginx/sites-enabled/default
code pure.zsh
cd mbnix
source venv/bin/activate
source shell/.r.sh
a
which pip
which python
zsh:autosuggest 1
prompt_pure_system_report
tmux ls
source ~/mbnix/shell/.zshrc
source shell/setup-mbnix.sh
code ~/test2.sh
source shell/setup-prompt.sh
export MINIMAL=true
code /etc/profile.d/nix.sh
source shell/prod.zsh
conda env list
mkdir env
touch env/.gitkeep
code /etc/zsh/zlogin
code /etc/zsh/zshenv
code /etc/zsh/zprofile
code /etc/zsh/zshrc
ls shell
source colors.sh
source shell/colors.sh
source shell/.zshrc
env -i zsh
env -i 
env -i
ls -a 
code .nix-channels
code .nix-defexpr
sudo group ls
ls -l /home/seb/.nix-profile
grep -R 'nix' /etc/profile /etc/bashrc /etc/zshrc ~/.bashrc ~/.zshrc ~/.profile
grep -R 'nix' /etc/profile /etc/bash.bashrc  ~/.bashrc ~/.zshrc ~/.profile
which nix
ls /nix/var/nix/profiles/default/etc/profile.d/
sudo ls /nix/var/nix/profiles/default/etc/profile.d/
sudo ls /nix/var/nix/profiles/default/etc/profile.d
sudo ls -l  /nix/var/nix/profiles/default/etc/profile.d
sudo ls -l  /nix
grp -R nix 
grep -R nix 
grep -R nix .
sudo bash mbnix/setup/del-nix.sh
env | grep code
env | grep LESS
env | grep nix-profile
nset COLORTERM
unset COLORTERM
nix-env -iA nixpkgs.nix
nix-env --list-generations
nix-env --delete-generations old
nix-collect-garbage
code /etc/nix/nix.conf 
sudo find /nix/store -name nix
sh setup/del-nix.sh 
code /home/seb/.nix-profile 
cat /home/seb/.nix-profile 
la  /home/seb/
code /etc/zsh/zprofile 
code /etc/zsh/zshrc 
ls  /usr/share/zsh/help/
ls  /usr/share/zsh/help/autoload 
cat /usr/share/zsh/help/autoload 
cat  ~/.nix-profile 
sudo cat  ~/.nix-profile 
getent
getent --usage
getent --help
getent group
ls -a
ls -a ..
bash setup/del-nix.sh 
bash setup/del-nix.sh
code /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
 mv /etc/bashrc.backup-before-nix /etc/bashrc
sudo  mv /etc/bashrc.backup-before-nix /etc/bashrc
sudo  mv /etc/bashrc.backup-before-nix /etc/bashrc && rm /etc/bashrc.backup-before-nix
sudo  mv /etc/bash.bashrc.backup-before-nix /etc/bashrc && rm /etc/bash.bashrc.backup-before-nix
sudo cat /etc/bash.bashrc.backup-before-nix
bash setup/install_nix.sh
nix help-stores
pwd
la
code shell/setup-mbnix.sh
env -i bash   . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'\

    . ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
autosuggest 1
zcomp init
source shell/setup.sh
mbnix --help
cd ~
sh mamba.sh
conda update -n base -c conda-forge conda
mamba activate
code ~/.zshrc
conda
source ~/.zshrc
mamba
code shell/.zshrc
d
alias
mbnix env
mbnix shell
nix --help
nix-channel --remove nixpkgs\
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\
nix-channel --update
nix doctor
nix-collect-garbage -d\
nix-store --delete /nix/var/nix/profiles/per-user/$(whoami)/channels\
rm -rf ~/.nix-defexpr/channels
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\
nix-channel --update
nix search nixpkgs rnix-lsp
nix run github:nix-community/rnix-lsp
nixfmt-rfc-style
nix-env -iA nixpkgs.nixfmt-rfc-style
nix-channel --list
nix-env -u '*'
env | grep IN_NIX_SHELL
nix-env -qaP | grep nixfmt
nix-store --delete /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
rm /home/seb/.local/state/nix/profiles/channels-5-link
sudo rm /nix/var/nix/profiles/per-user/root/channels-1-link
sudo rm /nix/var/nix/profiles/per-user/root/channels\
sudo rm /nix/var/nix/profiles/per-user/root/channels-1-link
sudo ls -l /nix/var/nix/profiles/per-user/root/
sudo nix-store --query --roots /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix
sudo -i\
nix --version
nix --version
nix-store --query --roots /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix-store --query --referrers /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix-env -p /nix/var/nix/profiles/per-user/root/profile --list-generations
sudo ls -ld /nix/var/nix/profiles/per-user/root
sudo chown -R root:root /nix/var/nix/profiles/per-user/root
sudo nix-env -p /nix/var/nix/profiles/per-user/root/profile --list-generations
sudo -i
nix-store --query --referrers /nix/store/5gb5srdqbbvcrrmqahh4qxalvgy1g475-env-manifest.nix
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\

nix-channel --update
which nix-instantiate
which rnix-lsp
nix-env -iA nixpkgs.rnix-lsp
nixpkgs-fmt
nix-env -iA nixpkgs.nixpkgs-fmt
nix-instantiate
env -i bash shell/setup-mbnix.sh
ls -lt
ls -lrt
ls -ltr
lr
cd mbodied_ros
docker compose up --build
sudo apt install docker
cd ..
uname -s
source .mbnix/r.sh
source .mbnix/.r.sh
uv self update
uv
uv --help
uv --no-project
uw
mb
r
source .mbnix/utils/tree.sh
t 2
source ~/pure.zsh
env -i bash
pipx
which $SHELL
clear
t 3
t 5
t --timestamps
t -t 4
t -t 4 .
t -t 1 .
t . -t
t . 1 -t
source .mbnix/utils/base.sh 
source .mbnix/utils/tree.sh 
mbnix env all
mbnix env 
mb env all all
source .mbnix/setup.sh 
mb env all
env | grep CXX
env | grep LD
env | grep py
mb env py
mb shell
echo ls -l ~/.sudo_as_admin_successful
cho $HOME
echo $HOME
mb env
mbnix
code .mbnix/utils/base.sh
source .mbnix/utils/base.sh
bat
gld
env 
source .mbnix/utils/env.sh
t -t
t -t 1
t 1 -t 
t 3 -t
t 3 -t pip
f
ff
echo $ZSH_VERSION
code $USER_SHELL
echo $SHELL
exec zsh
echo $0
code ~/.bashrc
code /usr/share/doc/bash/README.md.bash_completion.gz 
echo $SHELL $USER_SHELL
echo $SHELL $USER_SHELL $0
exec bash
ls
export MINIMAL=false
git status
git add .
git commit -m "init\
"
git push
echo $USER_SHELL
bash
env
env | grep MB
unset EXTAS
t
rs extras
doctor
als
alsources
rs
source .mbnix/.zshrc
exit
: 1732585574:0;a
: 1732585577:0;d
: 1732585578:0;dv
: 1732585642:0;rs
echo nix help > out.txt
code out.txt
echo $(nix help) > out.txt
source .zshrc 
nix help --no-color
nix help --help
export NIX_PAGER=cat
nix develop --recreate
export NIX_PAGER=bat
export NIX_PAGER=less
export NIX_PAGER='less -R'
export NIX_PAGER='less'
export NIX_DOC_LINK_STYLE=none
cat .bashrc
cat ../.bashrc
nix help --color
nix help | bat --no-color
nix help | less --no-color
nixd
tmux new
export NIX_DOC_LINK_STYLE=plain
sudo nixos-rebuild switch --upgrade
nix help | cat --no-color
env | grep -E 'NIX|LESS|PAGER|MANPAGER|GROFF'
env | grep -iE 'pager|less|termcap|bat'
unset PAGER\
unset NIX_PAGER
export NIX_HYPERLINKS=0 
mv nix.conf oldnix.conf
nix.conf
sudo logout
nix config check
sh doctor.sh
export PATH=$(echo $PATH | tr ':' '\n' | grep -v '/nix/store/rpl4s6srw7cgsvpa8w2ndrk1gc15i3ch-nix-2.24.10/bin' | paste -sd ':' -)
which -a nix
nix-collect-garbage -d
export PATH=$(echo $PATH | tr ':' '\n' | grep -v '/home/seb/.nix-profile/bin' | paste -sd ':' -)
nix-env -iA nixpkgs.direnv
echo $PATH | tr ':' '\n' | grep nix
ls /nix/store/*-nix-*/bin/nix
for user in /home/*; do\
    if [ -d "$user/.nix-profile/bin" ]; then\
        echo "Nix profile found for user: $(basename $user)"\
    fi\
done
cd corp/
mkdir conf
mkdir help
mv doctor.sh help
mkdir shell
mv git.py git.sh out.txt record.sh utils.sh shell/.
mv requirements.txt conf
mv conf/requirements.txt .
mkdir requirements
mv requirements.txt requirements/.
touch README.md
code README.md
code install-mbnix.sh
nstall-mbnix.sh
sh install-mbnix.sh
code setup/colors.sh
code .env.sh
env.sh env.sh
mv '.env.sh' env.sh
code env.sh
echo $USER
echo $SHELL_RC
source setup-nix.sh
export MB_WS=$PWD
cat nix.conf
   . /etc/profile.d/nix.sh
chmod +x setup-nix.sh
. setup-nix.sh
sh setup-nix.sh
ls | grep setup-nix.sh
$pwd
ls -l
. ./setup-nix.sh
echo $MB_WS
echo $BOLD_PINK
echo $PINK_BOLD
echo ""
echo "$BOLD_PINK  hi $RESET"
echo "$PINK_BOLD hi $RESET"
ps
$ps
export MB_WS=$PWD && source .zshrc
export MB_WS=$PWD && . .zshrc
export MB_WS=$PWD && . /shell/.zshrc
mbinx
. ./shell/.zshrc
source .zshrc
mbnix install
. shell/.zshrc
$_
echo $__
echo $_
echo $__structuredAttrs
export MB_WS=$PWD && . ./shell/.zshrc
cd shell
code setup-mbnix.sh
. setup-mbnix.sh
code .env
la shell
nix develop .
cd .
. ./setup-mbnix.sh
. ./shell/setup-mbnix.sh
export PS1=%{%}%n@%:$(__mb_prompt)%{%}%~%{%} %# 
echo `\
seb@~/mbnix % 
cellar
unset MB_COLOR_CODE
cd setup
echo $__mb_prompt
echo "${MB_COLOR}$MB_PROMPT${RESET}"
cd -
mkdir test
git touch init
touch init
git add init
reset
git commit -m latest
code .
code shell/colors.sh
exec shell/.zshrc
__mb_prompt
$__mb_prompt
echo $MB_PROMPT
cd test
echo $git_remote
echo $git_branch
env | grep git
git
git config 
git config -l
git 
git branch
git rev-parse --show-toplevel 
cd corpt
repo
export repo=$(git rev-parse --show-toplevel 2>/dev/null)
$repo
echo $repo
mpip search rpm
la -C
chmod +x install_miniconda_mamba.sh && ./mamba.sh
chmod +x mamba.sh && ./mamba.sh
python3 -m venv venv
pip install hatch
hatch env create --init henv
hatch env create --new henv
hatch env create henv
hatch init --new henv
hatch new --init henv
cat --help
code --help
code "--help"
code '--help'
code $'--help'
vim  '--help'
code "'--help'"
la --color
code ./--help
rm -rf --help
rm -rf ./--help
cat hello
t hello
ls hello
cd home
cd seb
cd corp
cat .env
rm -rf home
code pyproject.toml
mkdir -p src/henv
cd src/henv
touch __about__.py
hatch shell
source "/home/seb/.local/share/hatch/env/virtual/henv/bin/activate"
alias | grep -E 'nix|less|man'\
functions | grep -E 'nix|less|man'
echo $PROMPT
echo $PS1
mbnix reset
env | grep PATH
nix --help | cat
nix --help | less --no-color
nix --help | less -xclor
nix --help | less -xclolor
nix --help | less --xcolor
less --help
nix --help | less --use-color
nix --help | less -D
nix --help | less -D --xclolor
nix --help | less 
nix --help | cat -C
nix --help | cat --color
env | grep PS1
git init
git rm --cached test
git rm --cached -f test
rm -rf test
git commit -m "init"
gh repo create --private mbnix
gh repo create --private mbodiai/mbnix
git remote update
. ~/.zshrc
git config --get remote.origin.url
sudo certbot -d test.mbodi.ai --nginx
sudo certbot --cert-name test.mbodi.ai
git checkout -b main
which zsh
man fc
fc --help
which fc
fc
fc -ln
help fc
help
man zshbuiltins
script ~/session_log.txt
echo "${git_remote##*/}"
echo "$__mb_prompt"
echo "$(__mb_prompt)"
cat ~/session_log.txt
env | grep less
env | grep term
unset TERM
nix --help | cat 
unset CLICOLOR
mbnix --help 
env | grep COLOR
nix --help | less
nix --help | cat -
nix --help > ~/nix_help_output.txt 2>&1
code ~/nix_help_output.txt
plo
export TERM=xterm-256color
echo $TERM
nix-env -iA nix
echo | grep NIX
echo | grep NIX_
echo | grep L
nix --help 
echo $IN_NIX_SHELL
ps -o comm= $PPID
command -v nix-shell\
command -v nix\
command -v nix-store
locale
nix-collect-garbage\
nix-store --gc
nix-store --query --requisites /nix/store | grep nix
nix-store --query --requisites /nix
nix-store --query --requisites nix/store | grep nix
nix-store --query --requisites nix | grep nix
echo $LESS
env | grep NIX
code nix.conf
nix help --extra-experimental-features nix-command
echo $less
t -f
tree -f
code .dotnet
env | shell
env | grep SHELL
code .zshrc
code ~
nix help
cat ~/.zshrc
exec sh
bash shell/test.sh
ccat shell/.zshrc
export MB_COLOR=PINK_BOLD
unset MB_COLOR
source ctest.sh
source shell/test.sh
fish
env | grep LVL
source ~/mbnix/shell/.r.sh
source ~/mbnix/shell/test.sh
tgrep 
ts mbodied_ros
cd mbnix/mbodied_ros
uvp
which python3
pythn3 -V
python3 -V
conda activate
env | grep CONDA
code /etc/bash.bashrc
vim /etc/profile.d/nix.sh
sudo vim /etc/profile.d/nix.sh
sudo vim /etc/bash.bashrc
sudo rm -rf /etc/bashrc
rm -rf /etc/zshrc.backup-before-nix
sudo rm -rf /etc/zshrc.backup-before-nix
sudo rm -rf /etc/zshrc
nix uninstall
nix 
vim ~/.zshrc
source test2.sh
code mbnix/ctest.sh
source mbnix/ctest.sh
tree
ls .local
rm -rf termtosvg_output.svg
code docker/Dockerfile
git clone https://github.com/mbodiai/mbpy
git branch -a
source ../shell/.r.sh
source ../shell/.zshrc
s
python -m venv venv
source ~/test2.sh
cd mbpy
pip install -e .
python -m mbpy.cli
pip install rich
echo $PATH
echo $VIRTUALENV
echo $VIRTUAL_ENV
source ../async.zsh&& source ../pure.zsh
git remote add origin https://github.com/mbodiai/mbnix
prompt_pure_async_git_arrows
%b
echo "%b"
echo "$%b"
echo "$'%b'"
export LESS=-R
export less=$LESS
sudo vim /etc/nginx/sites-enabled/default
code pure.zsh
cd mbnix
source venv/bin/activate
source shell/.r.sh
a
which pip
which python
zsh:autosuggest 1
prompt_pure_system_report
tmux ls
source ~/mbnix/shell/.zshrc
source shell/setup-mbnix.sh
code ~/test2.sh
source shell/setup-prompt.sh
export MINIMAL=true
code /etc/profile.d/nix.sh
source shell/prod.zsh
conda env list
mkdir env
touch env/.gitkeep
code /etc/zsh/zlogin
code /etc/zsh/zshenv
code /etc/zsh/zprofile
code /etc/zsh/zshrc
ls shell
source colors.sh
source shell/colors.sh
source shell/.zshrc
env -i zsh
env -i 
env -i
ls -a 
code .nix-channels
code .nix-defexpr
sudo group ls
ls -l /home/seb/.nix-profile
grep -R 'nix' /etc/profile /etc/bashrc /etc/zshrc ~/.bashrc ~/.zshrc ~/.profile
grep -R 'nix' /etc/profile /etc/bash.bashrc  ~/.bashrc ~/.zshrc ~/.profile
which nix
ls /nix/var/nix/profiles/default/etc/profile.d/
sudo ls /nix/var/nix/profiles/default/etc/profile.d/
sudo ls /nix/var/nix/profiles/default/etc/profile.d
sudo ls -l  /nix/var/nix/profiles/default/etc/profile.d
sudo ls -l  /nix
grp -R nix 
grep -R nix 
grep -R nix .
sudo bash mbnix/setup/del-nix.sh
env | grep code
env | grep LESS
env | grep nix-profile
nset COLORTERM
unset COLORTERM
nix-env -iA nixpkgs.nix
nix-env --list-generations
nix-env --delete-generations old
nix-collect-garbage
code /etc/nix/nix.conf 
sudo find /nix/store -name nix
sh setup/del-nix.sh 
code /home/seb/.nix-profile 
cat /home/seb/.nix-profile 
la  /home/seb/
code /etc/zsh/zprofile 
code /etc/zsh/zshrc 
ls  /usr/share/zsh/help/
ls  /usr/share/zsh/help/autoload 
cat /usr/share/zsh/help/autoload 
cat  ~/.nix-profile 
sudo cat  ~/.nix-profile 
getent
getent --usage
getent --help
getent group
ls -a
ls -a ..
bash setup/del-nix.sh 
bash setup/del-nix.sh
code /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
 mv /etc/bashrc.backup-before-nix /etc/bashrc
sudo  mv /etc/bashrc.backup-before-nix /etc/bashrc
sudo  mv /etc/bashrc.backup-before-nix /etc/bashrc && rm /etc/bashrc.backup-before-nix
sudo  mv /etc/bash.bashrc.backup-before-nix /etc/bashrc && rm /etc/bash.bashrc.backup-before-nix
sudo cat /etc/bash.bashrc.backup-before-nix
bash setup/install_nix.sh
nix help-stores
pwd
la
code shell/setup-mbnix.sh
env -i bash   . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'\

    . ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
autosuggest 1
zcomp init
source shell/setup.sh
mbnix --help
cd ~
sh mamba.sh
conda update -n base -c conda-forge conda
mamba activate
code ~/.zshrc
conda
source ~/.zshrc
mamba
code shell/.zshrc
d
alias
mbnix env
mbnix shell
nix --help
nix-channel --remove nixpkgs\
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\
nix-channel --update
nix doctor
nix-collect-garbage -d\
nix-store --delete /nix/var/nix/profiles/per-user/$(whoami)/channels\
rm -rf ~/.nix-defexpr/channels
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\
nix-channel --update
nix search nixpkgs rnix-lsp
nix run github:nix-community/rnix-lsp
nixfmt-rfc-style
nix-env -iA nixpkgs.nixfmt-rfc-style
nix-channel --list
nix-env -u '*'
env | grep IN_NIX_SHELL
nix-env -qaP | grep nixfmt
nix-store --delete /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
rm /home/seb/.local/state/nix/profiles/channels-5-link
sudo rm /nix/var/nix/profiles/per-user/root/channels-1-link
sudo rm /nix/var/nix/profiles/per-user/root/channels\
sudo rm /nix/var/nix/profiles/per-user/root/channels-1-link
sudo ls -l /nix/var/nix/profiles/per-user/root/
sudo nix-store --query --roots /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix
sudo -i\
nix --version
nix --version
nix-store --query --roots /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix-store --query --referrers /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix-env -p /nix/var/nix/profiles/per-user/root/profile --list-generations
sudo ls -ld /nix/var/nix/profiles/per-user/root
sudo chown -R root:root /nix/var/nix/profiles/per-user/root
sudo nix-env -p /nix/var/nix/profiles/per-user/root/profile --list-generations
sudo -i
nix-store --query --referrers /nix/store/5gb5srdqbbvcrrmqahh4qxalvgy1g475-env-manifest.nix
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\

nix-channel --update
which nix-instantiate
which rnix-lsp
nix-env -iA nixpkgs.rnix-lsp
nixpkgs-fmt
nix-env -iA nixpkgs.nixpkgs-fmt
nix-instantiate
env -i bash shell/setup-mbnix.sh
ls -lt
ls -lrt
ls -ltr
lr
cd mbodied_ros
docker compose up --build
sudo apt install docker
cd ..
uname -s
source .mbnix/r.sh
source .mbnix/.r.sh
uv self update
uv
uv --help
uv --no-project
uw
mb
r
source .mbnix/utils/tree.sh
t 2
source ~/pure.zsh
env -i bash
pipx
which $SHELL
clear
t 3
t 5
t --timestamps
t -t 4
t -t 4 .
t -t 1 .
t . -t
t . 1 -t
source .mbnix/utils/base.sh 
source .mbnix/utils/tree.sh 
mbnix env all
mbnix env 
mb env all all
source .mbnix/setup.sh 
mb env all
env | grep CXX
env | grep LD
env | grep py
mb env py
mb shell
echo ls -l ~/.sudo_as_admin_successful
cho $HOME
echo $HOME
mb env
mbnix
code .mbnix/utils/base.sh
source .mbnix/utils/base.sh
bat
gld
env 
source .mbnix/utils/env.sh
t -t
t -t 1
t 1 -t 
t 3 -t
t 3 -t pip
f
ff
echo $ZSH_VERSION
code $USER_SHELL
echo $SHELL
exec zsh
echo $0
code ~/.bashrc
code /usr/share/doc/bash/README.md.bash_completion.gz 
echo $SHELL $USER_SHELL
echo $SHELL $USER_SHELL $0
exec bash
ls
export MINIMAL=false
git status
git add .
git commit -m "init\
"
git push
echo $USER_SHELL
bash
env
env | grep MB
unset EXTAS
t
rs extras
doctor
als
alsources
rs
source .mbnix/.zshrc
exit
: 1732585647:0;a
: 1732585669:0;d
: 1732585671:0;dv
: 1732585680:0;a
: 1732585682:0;ls
: 1732585684:0;d
: 1732585690:0;cd env
: 1732585690:0;ls
: 1732585691:0;la
: 1732585694:0;a
: 1732585696:0;d
: 1732585704:0;a --help
: 1732585708:0;d
: 1732585711:0;dv
: 1732585716:0;a
: 1732585718:0;dv
: 1732585721:0;d
: 1732587911:0;a
: 1732587912:0;la
: 1732587916:0;d
: 1732587918:0;cd ..
: 1732587919:0;dv
: 1732587923:0;ls
: 1732587952:0;sh .mbnix/setup/install_nix.sh
: 1732588077:0;rs
echo nix help > out.txt
code out.txt
echo $(nix help) > out.txt
source .zshrc 
nix help --no-color
nix help --help
export NIX_PAGER=cat
nix develop --recreate
export NIX_PAGER=bat
export NIX_PAGER=less
export NIX_PAGER='less -R'
export NIX_PAGER='less'
export NIX_DOC_LINK_STYLE=none
cat .bashrc
cat ../.bashrc
nix help --color
nix help | bat --no-color
nix help | less --no-color
nixd
tmux new
export NIX_DOC_LINK_STYLE=plain
sudo nixos-rebuild switch --upgrade
nix help | cat --no-color
env | grep -E 'NIX|LESS|PAGER|MANPAGER|GROFF'
env | grep -iE 'pager|less|termcap|bat'
unset PAGER\
unset NIX_PAGER
export NIX_HYPERLINKS=0 
mv nix.conf oldnix.conf
nix.conf
sudo logout
nix config check
sh doctor.sh
export PATH=$(echo $PATH | tr ':' '\n' | grep -v '/nix/store/rpl4s6srw7cgsvpa8w2ndrk1gc15i3ch-nix-2.24.10/bin' | paste -sd ':' -)
which -a nix
nix-collect-garbage -d
export PATH=$(echo $PATH | tr ':' '\n' | grep -v '/home/seb/.nix-profile/bin' | paste -sd ':' -)
nix-env -iA nixpkgs.direnv
echo $PATH | tr ':' '\n' | grep nix
ls /nix/store/*-nix-*/bin/nix
for user in /home/*; do\
    if [ -d "$user/.nix-profile/bin" ]; then\
        echo "Nix profile found for user: $(basename $user)"\
    fi\
done
cd corp/
mkdir conf
mkdir help
mv doctor.sh help
mkdir shell
mv git.py git.sh out.txt record.sh utils.sh shell/.
mv requirements.txt conf
mv conf/requirements.txt .
mkdir requirements
mv requirements.txt requirements/.
touch README.md
code README.md
code install-mbnix.sh
nstall-mbnix.sh
sh install-mbnix.sh
code setup/colors.sh
code .env.sh
env.sh env.sh
mv '.env.sh' env.sh
code env.sh
echo $USER
echo $SHELL_RC
source setup-nix.sh
export MB_WS=$PWD
cat nix.conf
   . /etc/profile.d/nix.sh
chmod +x setup-nix.sh
. setup-nix.sh
sh setup-nix.sh
ls | grep setup-nix.sh
$pwd
ls -l
. ./setup-nix.sh
echo $MB_WS
echo $BOLD_PINK
echo $PINK_BOLD
echo ""
echo "$BOLD_PINK  hi $RESET"
echo "$PINK_BOLD hi $RESET"
ps
$ps
export MB_WS=$PWD && source .zshrc
export MB_WS=$PWD && . .zshrc
export MB_WS=$PWD && . /shell/.zshrc
mbinx
. ./shell/.zshrc
source .zshrc
mbnix install
. shell/.zshrc
$_
echo $__
echo $_
echo $__structuredAttrs
export MB_WS=$PWD && . ./shell/.zshrc
cd shell
code setup-mbnix.sh
. setup-mbnix.sh
code .env
la shell
nix develop .
cd .
. ./setup-mbnix.sh
. ./shell/setup-mbnix.sh
export PS1=%{%}%n@%:$(__mb_prompt)%{%}%~%{%} %# 
echo `\
seb@~/mbnix % 
cellar
unset MB_COLOR_CODE
cd setup
echo $__mb_prompt
echo "${MB_COLOR}$MB_PROMPT${RESET}"
cd -
mkdir test
git touch init
touch init
git add init
reset
git commit -m latest
code .
code shell/colors.sh
exec shell/.zshrc
__mb_prompt
$__mb_prompt
echo $MB_PROMPT
cd test
echo $git_remote
echo $git_branch
env | grep git
git
git config 
git config -l
git 
git branch
git rev-parse --show-toplevel 
cd corpt
repo
export repo=$(git rev-parse --show-toplevel 2>/dev/null)
$repo
echo $repo
mpip search rpm
la -C
chmod +x install_miniconda_mamba.sh && ./mamba.sh
chmod +x mamba.sh && ./mamba.sh
python3 -m venv venv
pip install hatch
hatch env create --init henv
hatch env create --new henv
hatch env create henv
hatch init --new henv
hatch new --init henv
cat --help
code --help
code "--help"
code '--help'
code $'--help'
vim  '--help'
code "'--help'"
la --color
code ./--help
rm -rf --help
rm -rf ./--help
cat hello
t hello
ls hello
cd home
cd seb
cd corp
cat .env
rm -rf home
code pyproject.toml
mkdir -p src/henv
cd src/henv
touch __about__.py
hatch shell
source "/home/seb/.local/share/hatch/env/virtual/henv/bin/activate"
alias | grep -E 'nix|less|man'\
functions | grep -E 'nix|less|man'
echo $PROMPT
echo $PS1
mbnix reset
env | grep PATH
nix --help | cat
nix --help | less --no-color
nix --help | less -xclor
nix --help | less -xclolor
nix --help | less --xcolor
less --help
nix --help | less --use-color
nix --help | less -D
nix --help | less -D --xclolor
nix --help | less 
nix --help | cat -C
nix --help | cat --color
env | grep PS1
git init
git rm --cached test
git rm --cached -f test
rm -rf test
git commit -m "init"
gh repo create --private mbnix
gh repo create --private mbodiai/mbnix
git remote update
. ~/.zshrc
git config --get remote.origin.url
sudo certbot -d test.mbodi.ai --nginx
sudo certbot --cert-name test.mbodi.ai
git checkout -b main
which zsh
man fc
fc --help
which fc
fc
fc -ln
help fc
help
man zshbuiltins
script ~/session_log.txt
echo "${git_remote##*/}"
echo "$__mb_prompt"
echo "$(__mb_prompt)"
cat ~/session_log.txt
env | grep less
env | grep term
unset TERM
nix --help | cat 
unset CLICOLOR
mbnix --help 
env | grep COLOR
nix --help | less
nix --help | cat -
nix --help > ~/nix_help_output.txt 2>&1
code ~/nix_help_output.txt
plo
export TERM=xterm-256color
echo $TERM
nix-env -iA nix
echo | grep NIX
echo | grep NIX_
echo | grep L
nix --help 
echo $IN_NIX_SHELL
ps -o comm= $PPID
command -v nix-shell\
command -v nix\
command -v nix-store
locale
nix-collect-garbage\
nix-store --gc
nix-store --query --requisites /nix/store | grep nix
nix-store --query --requisites /nix
nix-store --query --requisites nix/store | grep nix
nix-store --query --requisites nix | grep nix
echo $LESS
env | grep NIX
code nix.conf
nix help --extra-experimental-features nix-command
echo $less
t -f
tree -f
code .dotnet
env | shell
env | grep SHELL
code .zshrc
code ~
nix help
cat ~/.zshrc
exec sh
bash shell/test.sh
ccat shell/.zshrc
export MB_COLOR=PINK_BOLD
unset MB_COLOR
source ctest.sh
source shell/test.sh
fish
env | grep LVL
source ~/mbnix/shell/.r.sh
source ~/mbnix/shell/test.sh
tgrep 
ts mbodied_ros
cd mbnix/mbodied_ros
uvp
which python3
pythn3 -V
python3 -V
conda activate
env | grep CONDA
code /etc/bash.bashrc
vim /etc/profile.d/nix.sh
sudo vim /etc/profile.d/nix.sh
sudo vim /etc/bash.bashrc
sudo rm -rf /etc/bashrc
rm -rf /etc/zshrc.backup-before-nix
sudo rm -rf /etc/zshrc.backup-before-nix
sudo rm -rf /etc/zshrc
nix uninstall
nix 
vim ~/.zshrc
source test2.sh
code mbnix/ctest.sh
source mbnix/ctest.sh
tree
ls .local
rm -rf termtosvg_output.svg
code docker/Dockerfile
git clone https://github.com/mbodiai/mbpy
git branch -a
source ../shell/.r.sh
source ../shell/.zshrc
s
python -m venv venv
source ~/test2.sh
cd mbpy
pip install -e .
python -m mbpy.cli
pip install rich
echo $PATH
echo $VIRTUALENV
echo $VIRTUAL_ENV
source ../async.zsh&& source ../pure.zsh
git remote add origin https://github.com/mbodiai/mbnix
prompt_pure_async_git_arrows
%b
echo "%b"
echo "$%b"
echo "$'%b'"
export LESS=-R
export less=$LESS
sudo vim /etc/nginx/sites-enabled/default
code pure.zsh
cd mbnix
source venv/bin/activate
source shell/.r.sh
a
which pip
which python
zsh:autosuggest 1
prompt_pure_system_report
tmux ls
source ~/mbnix/shell/.zshrc
source shell/setup-mbnix.sh
code ~/test2.sh
source shell/setup-prompt.sh
export MINIMAL=true
code /etc/profile.d/nix.sh
source shell/prod.zsh
conda env list
mkdir env
touch env/.gitkeep
code /etc/zsh/zlogin
code /etc/zsh/zshenv
code /etc/zsh/zprofile
code /etc/zsh/zshrc
ls shell
source colors.sh
source shell/colors.sh
source shell/.zshrc
env -i zsh
env -i 
env -i
ls -a 
code .nix-channels
code .nix-defexpr
sudo group ls
ls -l /home/seb/.nix-profile
grep -R 'nix' /etc/profile /etc/bashrc /etc/zshrc ~/.bashrc ~/.zshrc ~/.profile
grep -R 'nix' /etc/profile /etc/bash.bashrc  ~/.bashrc ~/.zshrc ~/.profile
which nix
ls /nix/var/nix/profiles/default/etc/profile.d/
sudo ls /nix/var/nix/profiles/default/etc/profile.d/
sudo ls /nix/var/nix/profiles/default/etc/profile.d
sudo ls -l  /nix/var/nix/profiles/default/etc/profile.d
sudo ls -l  /nix
grp -R nix 
grep -R nix 
grep -R nix .
sudo bash mbnix/setup/del-nix.sh
env | grep code
env | grep LESS
env | grep nix-profile
nset COLORTERM
unset COLORTERM
nix-env -iA nixpkgs.nix
nix-env --list-generations
nix-env --delete-generations old
nix-collect-garbage
code /etc/nix/nix.conf 
sudo find /nix/store -name nix
sh setup/del-nix.sh 
code /home/seb/.nix-profile 
cat /home/seb/.nix-profile 
la  /home/seb/
code /etc/zsh/zprofile 
code /etc/zsh/zshrc 
ls  /usr/share/zsh/help/
ls  /usr/share/zsh/help/autoload 
cat /usr/share/zsh/help/autoload 
cat  ~/.nix-profile 
sudo cat  ~/.nix-profile 
getent
getent --usage
getent --help
getent group
ls -a
ls -a ..
bash setup/del-nix.sh 
bash setup/del-nix.sh
code /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
 mv /etc/bashrc.backup-before-nix /etc/bashrc
sudo  mv /etc/bashrc.backup-before-nix /etc/bashrc
sudo  mv /etc/bashrc.backup-before-nix /etc/bashrc && rm /etc/bashrc.backup-before-nix
sudo  mv /etc/bash.bashrc.backup-before-nix /etc/bashrc && rm /etc/bash.bashrc.backup-before-nix
sudo cat /etc/bash.bashrc.backup-before-nix
bash setup/install_nix.sh
nix help-stores
pwd
la
code shell/setup-mbnix.sh
env -i bash   . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'\

    . ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
autosuggest 1
zcomp init
source shell/setup.sh
mbnix --help
cd ~
sh mamba.sh
conda update -n base -c conda-forge conda
mamba activate
code ~/.zshrc
conda
source ~/.zshrc
mamba
code shell/.zshrc
d
alias
mbnix env
mbnix shell
nix --help
nix-channel --remove nixpkgs\
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\
nix-channel --update
nix doctor
nix-collect-garbage -d\
nix-store --delete /nix/var/nix/profiles/per-user/$(whoami)/channels\
rm -rf ~/.nix-defexpr/channels
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\
nix-channel --update
nix search nixpkgs rnix-lsp
nix run github:nix-community/rnix-lsp
nixfmt-rfc-style
nix-env -iA nixpkgs.nixfmt-rfc-style
nix-channel --list
nix-env -u '*'
env | grep IN_NIX_SHELL
nix-env -qaP | grep nixfmt
nix-store --delete /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
rm /home/seb/.local/state/nix/profiles/channels-5-link
sudo rm /nix/var/nix/profiles/per-user/root/channels-1-link
sudo rm /nix/var/nix/profiles/per-user/root/channels\
sudo rm /nix/var/nix/profiles/per-user/root/channels-1-link
sudo ls -l /nix/var/nix/profiles/per-user/root/
sudo nix-store --query --roots /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix
sudo -i\
nix --version
nix --version
nix-store --query --roots /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix-store --query --referrers /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix-env -p /nix/var/nix/profiles/per-user/root/profile --list-generations
sudo ls -ld /nix/var/nix/profiles/per-user/root
sudo chown -R root:root /nix/var/nix/profiles/per-user/root
sudo nix-env -p /nix/var/nix/profiles/per-user/root/profile --list-generations
sudo -i
nix-store --query --referrers /nix/store/5gb5srdqbbvcrrmqahh4qxalvgy1g475-env-manifest.nix
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\

nix-channel --update
which nix-instantiate
which rnix-lsp
nix-env -iA nixpkgs.rnix-lsp
nixpkgs-fmt
nix-env -iA nixpkgs.nixpkgs-fmt
nix-instantiate
env -i bash shell/setup-mbnix.sh
ls -lt
ls -lrt
ls -ltr
lr
cd mbodied_ros
docker compose up --build
sudo apt install docker
cd ..
uname -s
source .mbnix/r.sh
source .mbnix/.r.sh
uv self update
uv
uv --help
uv --no-project
uw
mb
r
source .mbnix/utils/tree.sh
t 2
source ~/pure.zsh
env -i bash
pipx
which $SHELL
clear
t 3
t 5
t --timestamps
t -t 4
t -t 4 .
t -t 1 .
t . -t
t . 1 -t
source .mbnix/utils/base.sh 
source .mbnix/utils/tree.sh 
mbnix env all
mbnix env 
mb env all all
source .mbnix/setup.sh 
mb env all
env | grep CXX
env | grep LD
env | grep py
mb env py
mb shell
echo ls -l ~/.sudo_as_admin_successful
cho $HOME
echo $HOME
mb env
mbnix
code .mbnix/utils/base.sh
source .mbnix/utils/base.sh
bat
gld
env 
source .mbnix/utils/env.sh
t -t
t -t 1
t 1 -t 
t 3 -t
t 3 -t pip
f
ff
echo $ZSH_VERSION
code $USER_SHELL
echo $SHELL
exec zsh
echo $0
code ~/.bashrc
code /usr/share/doc/bash/README.md.bash_completion.gz 
echo $SHELL $USER_SHELL
echo $SHELL $USER_SHELL $0
exec bash
ls
export MINIMAL=false
git status
git add .
git commit -m "init\
"
git push
echo $USER_SHELL
bash
env
env | grep MB
unset EXTAS
t
rs extras
doctor
als
alsources
rs
source .mbnix/.zshrc
exit
: 1732588082:0;mb
: 1732588092:0;mb shell
rs
locale
locale --help
locale -a
locale -a | grep utf
locale -a | grep en.utf8
locale -a | grep .utf8
locale -a | grep en_US.utf8
cat en_US.utf8
cat wae_CH.utf8
clear
ls
a
rs extras
exit
: 1732596113:0;env
: 1732596120:0;nix --help
: 1732596124:0;mb
: 1732596126:0;mb env
: 1732596143:0;mb shell
sudo locale-gen en_US.UTF-8
sudo update-locale LANG=en_US.UTF-8
exit
: 1732596158:0;mb shell
sudo update-locale LANG=en_US.UTF-8
sudo locale-gen en_US.utf8
sudo update-locale LANG=en_US.utf8
exit
: 1732596193:0;mb shell
sudo locale
zsh -c .mbnix/setup.sh 
exit
: 1732596302:0;help zsh
: 1732596487:0;nix store
: 1732596489:0;nix store cat
: 1732596492:0;nix store ls
: 1732596504:0;nix store info
: 1732596511:0;nix store --help
: 1732596545:0;nix --help
: 1732596558:0;nix help-stores
: 1732596695:0;nix flake --help
: 1732597354:0;nix help
: 1732597365:0;nix search nixpkgs
: 1732597372:0;nix search --helpp
: 1732597374:0;nix search --help
: 1732597391:0;nix search nixpkgs ^
: 1732597478:0;nix search nixpkgs ^ > nixpgs.md &
: 1732597486:0;code nixpgs.md
: 1732597502:0;head nixpgs.md 30
: 1732597507:0;head nixpgs.md 
: 1732597522:0;cat nixpgs.md  | grep py
: 1732597540:0;cat nixpgs.md  | grep pexpect
: 1732597547:0;cat nixpgs.md  | grep embodied-agents
: 1732597549:0;cat nixpgs.md  | grep mbodied
: 1732597559:0;cat nixpgs.md  | grep torch
: 1732597601:0;nix search help
: 1732597605:0;nix search --help
: 1732597686:0;nix search --exclude legacyPackages
: 1732597690:0;nix search --exclude legacyPackages ^
: 1732597695:0;nix search ^ --exclude legacyPackages 
: 1732597699:0;nix search --exclude legacyPackages ^
: 1732597705:0;nix search --exclude legacyPackages .*
: 1732597713:0;nix search --exclude legacyPackages "^"
: 1732597741:0;nix search --exclude legacyPackages nixpkgs^
: 1732597744:0;nix search --exclude legacyPackages nixpkgs ^
: 1732597769:0;nix search torch nixpkgs ^ --json
: 1732597797:0;nix search nixpkgs  torch --json
: 1732597878:0;nix search --help
: 1732597990:0;nix help
: 1732598004:0;nix profile
: 1732598010:0;nix profile --help
: 1732598020:0;nix 
: 1732598023:0;nix help
: 1732598033:0;nix derivation --help
: 1732598076:0;nix flake --help
: 1732598107:0;mkdir test
: 1732598109:0;cd test
: 1732598119:0;nix flake init
: 1732598123:0;code flake.nix
: 1732598144:0;nix flake show .
: 1732598149:0;nix flake show flake.nix
: 1732598154:0;nix flake show 
: 1732598170:0;nix flake clone --help
: 1732598197:0;nix flake init --help
: 1732598245:0;nix flake new --help
: 1732598258:0;nix flake show templates
: 1732598307:0;nix flake 
: 1732598312:0;nix flake show
: 1732598331:0;nix flake show --help
: 1732598342:0;nix flake show flake.nix
: 1732598348:0;nix flake show .
: 1732598355:0;git status
: 1732598357:0;cd ..
: 1732598360:0;git add .
: 1732598371:0;git rm --cached .termtosvg
: 1732598374:0;git rm -f --cached .termtosvg
: 1732598377:0;git status
: 1732598385:0;git add .
: 1732598394:0;code .gitignore
: 1732598409:0;echo ".termtosvg" >> .gitignore
: 1732598412:0;cd .mbnix
: 1732598412:0;ls
: 1732598419:0;code .gitkeep
: 1732598423:0;ls
: 1732598424:0;la
: 1732598425:0;t
: 1732598430:0;bb
: 1732598430:0;b
: 1732598446:0;cd ..
: 1732598448:0;git status
: 1732598454:0;la
: 1732598457:0;code .git
: 1732598463:0;la
: 1732598463:0;t
: 1732598487:0;cat a.out
: 1732598584:0;mb
: 1732598679:0;cd ..
: 1732598680:0;ls
: 1732598689:0;uw
: 1732598702:0;rs extras
echo nix help > out.txt
code out.txt
echo $(nix help) > out.txt
source .zshrc 
nix help --no-color
nix help --help
export NIX_PAGER=cat
nix develop --recreate
export NIX_PAGER=bat
export NIX_PAGER=less
export NIX_PAGER='less -R'
export NIX_PAGER='less'
export NIX_DOC_LINK_STYLE=none
cat .bashrc
cat ../.bashrc
nix help --color
nix help | bat --no-color
nix help | less --no-color
nixd
tmux new
export NIX_DOC_LINK_STYLE=plain
sudo nixos-rebuild switch --upgrade
nix help | cat --no-color
env | grep -E 'NIX|LESS|PAGER|MANPAGER|GROFF'
env | grep -iE 'pager|less|termcap|bat'
unset PAGER\
unset NIX_PAGER
export NIX_HYPERLINKS=0 
mv nix.conf oldnix.conf
nix.conf
sudo logout
nix config check
sh doctor.sh
export PATH=$(echo $PATH | tr ':' '\n' | grep -v '/nix/store/rpl4s6srw7cgsvpa8w2ndrk1gc15i3ch-nix-2.24.10/bin' | paste -sd ':' -)
which -a nix
nix-collect-garbage -d
export PATH=$(echo $PATH | tr ':' '\n' | grep -v '/home/seb/.nix-profile/bin' | paste -sd ':' -)
nix-env -iA nixpkgs.direnv
echo $PATH | tr ':' '\n' | grep nix
ls /nix/store/*-nix-*/bin/nix
for user in /home/*; do\
    if [ -d "$user/.nix-profile/bin" ]; then\
        echo "Nix profile found for user: $(basename $user)"\
    fi\
done
cd corp/
mkdir conf
mkdir help
mv doctor.sh help
mkdir shell
mv git.py git.sh out.txt record.sh utils.sh shell/.
mv requirements.txt conf
mv conf/requirements.txt .
mkdir requirements
mv requirements.txt requirements/.
touch README.md
code README.md
code install-mbnix.sh
nstall-mbnix.sh
sh install-mbnix.sh
code setup/colors.sh
code .env.sh
env.sh env.sh
mv '.env.sh' env.sh
code env.sh
echo $USER
echo $SHELL_RC
source setup-nix.sh
export MB_WS=$PWD
cat nix.conf
   . /etc/profile.d/nix.sh
chmod +x setup-nix.sh
. setup-nix.sh
sh setup-nix.sh
ls | grep setup-nix.sh
$pwd
ls -l
. ./setup-nix.sh
echo $MB_WS
echo $BOLD_PINK
echo $PINK_BOLD
echo ""
echo "$BOLD_PINK  hi $RESET"
echo "$PINK_BOLD hi $RESET"
ps
$ps
export MB_WS=$PWD && source .zshrc
export MB_WS=$PWD && . .zshrc
export MB_WS=$PWD && . /shell/.zshrc
mbinx
. ./shell/.zshrc
source .zshrc
mbnix install
. shell/.zshrc
$_
echo $__
echo $_
echo $__structuredAttrs
export MB_WS=$PWD && . ./shell/.zshrc
cd shell
code setup-mbnix.sh
. setup-mbnix.sh
code .env
la shell
nix develop .
cd .
. ./setup-mbnix.sh
. ./shell/setup-mbnix.sh
export PS1=%{%}%n@%:$(__mb_prompt)%{%}%~%{%} %# 
echo `\
seb@~/mbnix % 
cellar
unset MB_COLOR_CODE
cd setup
echo $__mb_prompt
echo "${MB_COLOR}$MB_PROMPT${RESET}"
cd -
mkdir test
git touch init
touch init
git add init
reset
git commit -m latest
code .
code shell/colors.sh
exec shell/.zshrc
__mb_prompt
$__mb_prompt
echo $MB_PROMPT
cd test
echo $git_remote
echo $git_branch
env | grep git
git
git config 
git config -l
git 
git branch
git rev-parse --show-toplevel 
cd corpt
repo
export repo=$(git rev-parse --show-toplevel 2>/dev/null)
$repo
echo $repo
mpip search rpm
la -C
chmod +x install_miniconda_mamba.sh && ./mamba.sh
chmod +x mamba.sh && ./mamba.sh
python3 -m venv venv
pip install hatch
hatch env create --init henv
hatch env create --new henv
hatch env create henv
hatch init --new henv
hatch new --init henv
cat --help
code --help
code "--help"
code '--help'
code $'--help'
vim  '--help'
code "'--help'"
la --color
code ./--help
rm -rf --help
rm -rf ./--help
cat hello
t hello
ls hello
cd home
cd seb
cd corp
cat .env
rm -rf home
code pyproject.toml
mkdir -p src/henv
cd src/henv
touch __about__.py
hatch shell
source "/home/seb/.local/share/hatch/env/virtual/henv/bin/activate"
alias | grep -E 'nix|less|man'\
functions | grep -E 'nix|less|man'
echo $PROMPT
echo $PS1
mbnix reset
env | grep PATH
nix --help | cat
nix --help | less --no-color
nix --help | less -xclor
nix --help | less -xclolor
nix --help | less --xcolor
less --help
nix --help | less --use-color
nix --help | less -D
nix --help | less -D --xclolor
nix --help | less 
nix --help | cat -C
nix --help | cat --color
env | grep PS1
git init
git rm --cached test
git rm --cached -f test
rm -rf test
git commit -m "init"
gh repo create --private mbnix
gh repo create --private mbodiai/mbnix
git remote update
. ~/.zshrc
git config --get remote.origin.url
sudo certbot -d test.mbodi.ai --nginx
sudo certbot --cert-name test.mbodi.ai
git checkout -b main
which zsh
man fc
fc --help
which fc
fc
fc -ln
help fc
help
man zshbuiltins
script ~/session_log.txt
echo "${git_remote##*/}"
echo "$__mb_prompt"
echo "$(__mb_prompt)"
cat ~/session_log.txt
env | grep less
env | grep term
unset TERM
nix --help | cat 
unset CLICOLOR
mbnix --help 
env | grep COLOR
nix --help | less
nix --help | cat -
nix --help > ~/nix_help_output.txt 2>&1
code ~/nix_help_output.txt
plo
export TERM=xterm-256color
echo $TERM
nix-env -iA nix
echo | grep NIX
echo | grep NIX_
echo | grep L
nix --help 
echo $IN_NIX_SHELL
ps -o comm= $PPID
command -v nix-shell\
command -v nix\
command -v nix-store
locale
nix-collect-garbage\
nix-store --gc
nix-store --query --requisites /nix/store | grep nix
nix-store --query --requisites /nix
nix-store --query --requisites nix/store | grep nix
nix-store --query --requisites nix | grep nix
echo $LESS
env | grep NIX
code nix.conf
nix help --extra-experimental-features nix-command
echo $less
t -f
tree -f
code .dotnet
env | shell
env | grep SHELL
code .zshrc
code ~
nix help
cat ~/.zshrc
exec sh
bash shell/test.sh
ccat shell/.zshrc
export MB_COLOR=PINK_BOLD
unset MB_COLOR
source ctest.sh
source shell/test.sh
fish
env | grep LVL
source ~/mbnix/shell/.r.sh
source ~/mbnix/shell/test.sh
tgrep 
ts mbodied_ros
cd mbnix/mbodied_ros
uvp
which python3
pythn3 -V
python3 -V
conda activate
env | grep CONDA
code /etc/bash.bashrc
vim /etc/profile.d/nix.sh
sudo vim /etc/profile.d/nix.sh
sudo vim /etc/bash.bashrc
sudo rm -rf /etc/bashrc
rm -rf /etc/zshrc.backup-before-nix
sudo rm -rf /etc/zshrc.backup-before-nix
sudo rm -rf /etc/zshrc
nix uninstall
nix 
vim ~/.zshrc
source test2.sh
code mbnix/ctest.sh
source mbnix/ctest.sh
tree
ls .local
rm -rf termtosvg_output.svg
code docker/Dockerfile
git clone https://github.com/mbodiai/mbpy
git branch -a
source ../shell/.r.sh
source ../shell/.zshrc
s
python -m venv venv
source ~/test2.sh
cd mbpy
pip install -e .
python -m mbpy.cli
pip install rich
echo $PATH
echo $VIRTUALENV
echo $VIRTUAL_ENV
source ../async.zsh&& source ../pure.zsh
git remote add origin https://github.com/mbodiai/mbnix
prompt_pure_async_git_arrows
%b
echo "%b"
echo "$%b"
echo "$'%b'"
export LESS=-R
export less=$LESS
sudo vim /etc/nginx/sites-enabled/default
code pure.zsh
cd mbnix
source venv/bin/activate
source shell/.r.sh
a
which pip
which python
zsh:autosuggest 1
prompt_pure_system_report
tmux ls
source ~/mbnix/shell/.zshrc
source shell/setup-mbnix.sh
code ~/test2.sh
source shell/setup-prompt.sh
export MINIMAL=true
code /etc/profile.d/nix.sh
source shell/prod.zsh
conda env list
mkdir env
touch env/.gitkeep
code /etc/zsh/zlogin
code /etc/zsh/zshenv
code /etc/zsh/zprofile
code /etc/zsh/zshrc
ls shell
source colors.sh
source shell/colors.sh
source shell/.zshrc
env -i zsh
env -i 
env -i
ls -a 
code .nix-channels
code .nix-defexpr
sudo group ls
ls -l /home/seb/.nix-profile
grep -R 'nix' /etc/profile /etc/bashrc /etc/zshrc ~/.bashrc ~/.zshrc ~/.profile
grep -R 'nix' /etc/profile /etc/bash.bashrc  ~/.bashrc ~/.zshrc ~/.profile
which nix
ls /nix/var/nix/profiles/default/etc/profile.d/
sudo ls /nix/var/nix/profiles/default/etc/profile.d/
sudo ls /nix/var/nix/profiles/default/etc/profile.d
sudo ls -l  /nix/var/nix/profiles/default/etc/profile.d
sudo ls -l  /nix
grp -R nix 
grep -R nix 
grep -R nix .
sudo bash mbnix/setup/del-nix.sh
env | grep code
env | grep LESS
env | grep nix-profile
nset COLORTERM
unset COLORTERM
nix-env -iA nixpkgs.nix
nix-env --list-generations
nix-env --delete-generations old
nix-collect-garbage
code /etc/nix/nix.conf 
sudo find /nix/store -name nix
sh setup/del-nix.sh 
code /home/seb/.nix-profile 
cat /home/seb/.nix-profile 
la  /home/seb/
code /etc/zsh/zprofile 
code /etc/zsh/zshrc 
ls  /usr/share/zsh/help/
ls  /usr/share/zsh/help/autoload 
cat /usr/share/zsh/help/autoload 
cat  ~/.nix-profile 
sudo cat  ~/.nix-profile 
getent
getent --usage
getent --help
getent group
ls -a
ls -a ..
bash setup/del-nix.sh 
bash setup/del-nix.sh
code /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
 mv /etc/bashrc.backup-before-nix /etc/bashrc
sudo  mv /etc/bashrc.backup-before-nix /etc/bashrc
sudo  mv /etc/bashrc.backup-before-nix /etc/bashrc && rm /etc/bashrc.backup-before-nix
sudo  mv /etc/bash.bashrc.backup-before-nix /etc/bashrc && rm /etc/bash.bashrc.backup-before-nix
sudo cat /etc/bash.bashrc.backup-before-nix
bash setup/install_nix.sh
nix help-stores
pwd
la
code shell/setup-mbnix.sh
env -i bash   . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'\

    . ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
autosuggest 1
zcomp init
source shell/setup.sh
mbnix --help
cd ~
sh mamba.sh
conda update -n base -c conda-forge conda
mamba activate
code ~/.zshrc
conda
source ~/.zshrc
mamba
code shell/.zshrc
d
alias
mbnix env
mbnix shell
nix --help
nix-channel --remove nixpkgs\
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\
nix-channel --update
nix doctor
nix-collect-garbage -d\
nix-store --delete /nix/var/nix/profiles/per-user/$(whoami)/channels\
rm -rf ~/.nix-defexpr/channels
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\
nix-channel --update
nix search nixpkgs rnix-lsp
nix run github:nix-community/rnix-lsp
nixfmt-rfc-style
nix-env -iA nixpkgs.nixfmt-rfc-style
nix-channel --list
nix-env -u '*'
env | grep IN_NIX_SHELL
nix-env -qaP | grep nixfmt
nix-store --delete /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
rm /home/seb/.local/state/nix/profiles/channels-5-link
sudo rm /nix/var/nix/profiles/per-user/root/channels-1-link
sudo rm /nix/var/nix/profiles/per-user/root/channels\
sudo rm /nix/var/nix/profiles/per-user/root/channels-1-link
sudo ls -l /nix/var/nix/profiles/per-user/root/
sudo nix-store --query --roots /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix
sudo -i\
nix --version
nix --version
nix-store --query --roots /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix-store --query --referrers /nix/store/gza2s6y4ccz6lc9f90hdq1b72akdbbq6-nixpkgs
nix-env -p /nix/var/nix/profiles/per-user/root/profile --list-generations
sudo ls -ld /nix/var/nix/profiles/per-user/root
sudo chown -R root:root /nix/var/nix/profiles/per-user/root
sudo nix-env -p /nix/var/nix/profiles/per-user/root/profile --list-generations
sudo -i
nix-store --query --referrers /nix/store/5gb5srdqbbvcrrmqahh4qxalvgy1g475-env-manifest.nix
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs\

nix-channel --update
which nix-instantiate
which rnix-lsp
nix-env -iA nixpkgs.rnix-lsp
nixpkgs-fmt
nix-env -iA nixpkgs.nixpkgs-fmt
nix-instantiate
env -i bash shell/setup-mbnix.sh
ls -lt
ls -lrt
ls -ltr
lr
cd mbodied_ros
docker compose up --build
sudo apt install docker
cd ..
uname -s
source .mbnix/r.sh
source .mbnix/.r.sh
uv self update
uv
uv --help
uv --no-project
uw
mb
r
source .mbnix/utils/tree.sh
t 2
source ~/pure.zsh
env -i bash
pipx
which $SHELL
clear
t 3
t 5
t --timestamps
t -t 4
t -t 4 .
t -t 1 .
t . -t
t . 1 -t
source .mbnix/utils/base.sh 
source .mbnix/utils/tree.sh 
mbnix env all
mbnix env 
mb env all all
source .mbnix/setup.sh 
mb env all
env | grep CXX
env | grep LD
env | grep py
mb env py
mb shell
echo ls -l ~/.sudo_as_admin_successful
cho $HOME
echo $HOME
mb env
mbnix
code .mbnix/utils/base.sh
source .mbnix/utils/base.sh
bat
gld
env 
source .mbnix/utils/env.sh
t -t
t -t 1
t 1 -t 
t 3 -t
t 3 -t pip
f
ff
echo $ZSH_VERSION
code $USER_SHELL
echo $SHELL
exec zsh
echo $0
code ~/.bashrc
code /usr/share/doc/bash/README.md.bash_completion.gz 
echo $SHELL $USER_SHELL
echo $SHELL $USER_SHELL $0
exec bash
ls
export MINIMAL=false
git status
git add .
git commit -m "init\
"
git push
echo $USER_SHELL
bash
env
env | grep MB
unset EXTAS
t
rs extras
doctor
als
alsources
rs
source .mbnix/.zshrc
exit
: 1732598712:0;gh
: 1732598720:0;mb
: 1732644987:0;git status
: 1732644990:0;cd mbnix
: 1732644992:0;git status
: 1732645002:0;git add .
